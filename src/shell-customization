# - - - - - - - - - -
# - - - aliases - - -
# - - - - - - - - - -
alias edt='vim ~/.config/shell/customization'
alias src='source ~/.zshrc'
alias cmk="clear && printf '\e[3J'"

## git stuff
SPLIT_PAGER='GIT_PAGER="git-split-diffs --color | less -RFX"'
alias cb='git symbolic-ref --short HEAD | pbcopy'
# clean local branches missing from remote
alias clb="git branch -vvv | grep 'gone]' | tr -s ' ' | cut -d' ' -f2 | xargs git branch -D"
alias gcan='git commit --amend --no-edit'
alias gcop='git checkout -'
alias gdc='git diff --cached'
alias gdd='git diff "$DEFAULT_BRANCH" HEAD'
alias gdn='git diff --name-only'
alias gdnc='gdn --cached'
alias gdnd='gdd --name-only'
alias gds="${SPLIT_PAGER} gd"
alias gdsc='gds --cached'
alias gdsd="${SPLIT_PAGER} gdd"
alias gshs="${SPLIT_PAGER} git show"
alias gdr='git diff @{upstream} @'
alias gdsr="${SPLIT_PAGER} gdr"
alias gfp='git fetch --prune --tags --force'
alias gs='git status'
alias gsa='$(cd $(git root) && git add . && git stash > /dev/null)'

function gbb() { git checkout -b "$1"-backup "$1" }

# get branch name
alias bn='git rev-parse --abbrev-ref head | tee >(pbcopy)'
# get commit hash for branch tip
alias cn='git rev-parse --short head'
alias r='cd $(git root)'
# rebase all commits on current branch
alias rb='git rebase -i $(git merge-base develop head)'
# `ReBase Fix All`
alias rbfa='git commit -m "tmp" && rb'

alias rbmb='git rebase -i $(git merge-base $(git_develop_branch) HEAD)'

## everything else
alias awl='awless'
alias b='btm'
alias c='bat'
alias cat='bat'
alias cbs='pbpaste | sort | pbcopy'
alias cbu='pbpaste | sort -u | pbcopy'
alias dc='docker-compose'
alias dr='docker run --rm -it --entrypoint=/bin/bash'
# https://apple.stackexchange.com/a/211050
alias dt='open . -a iterm'
alias dx='cyclonedx'
alias eg='env | grep -i'
alias f='fzf'
alias gae='aws athena get-query-execution --query-execution-id'
alias gar='aws athena get-query-results --query-execution-id'
alias gw='./gradlew'
alias hc='http localhost:8080/health/full'
alias kubectl='kubecolor'
alias k='kubectl'
alias kb='kustomize build --enable-alpha-plugins --enable-helm --load-restrictor LoadRestrictionsNone'
alias kn='k9s'
alias krew='kubectl krew'
alias k9='kill -9'
alias ls='eza'
alias pr-check='gh pr checks --required'
alias rm='trash'
# copy the current subdirectory in a git repo
alias rp='echo -n "${$(pwd)#$(git rev-parse --show-toplevel)/}" | tee >(pbcopy)'
# https://gist.github.com/earthgecko/3089509#gistcomment-2140400
alias r32='LC_CTYPE=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 32 | head -n 1'
alias see='ps -ef | grep'
alias s='subl'
alias m='tldr'
alias tid='tid=$(uuidgen | tr "[:upper:]" "[:lower:]") && echo "$tid" && echo -n "$tid" | pbcopy'
alias trino-init='docker run --rm -d -p 9212:8080 --name trino trinodb/trino'
alias trino='docker exec -it trino trino'
alias v='vim'
alias wh='which'
alias where-java='/usr/libexec/java_home --verbose'

# externalize kubectl aliases
[ -f ~/.kube/kubectl_aliases ] && source ~/.kube/kubectl_aliases
[ -f ~/.kube/kubectl_custom_aliases ] && source ~/.kube/kubectl_custom_aliases

# - - - - - - - - - - - - - - - - -
# - - - environment variables - - -
# - - - - - - - - - - - - - - - - -
export AWS_DEFAULT_REGION='us-west-2'
export KUBE_EDITOR='/usr/local/bin/subl -w'
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# for homebrew, apparently
export PATH="/usr/local/sbin:$PATH"
# format results in mycli
export LESS="-XFR"
# for direnv
export EDITOR='vim'
export FD_OPTIONS='--follow --exclude .git --exclude node_modules'
export FZF_DEFAULT_OPTS="--no-mouse --reverse --multi --preview='(bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300' --preview-window='right:hidden:wrap' --bind='ctrl-k:clear-query,ctrl-z:toggle-preview'"
export FZF_DEFAULT_COMMAND='fd --type f'

# - - - - - - - - - - -
# - - - functions - - -
# - - - - - - - - - - -

# to override aliases created by zsh plugins,
# need to manually un-aias (https://superuser.com/a/1194298)
unalias gl
function gl() {
    git log --oneline -n ${1:-10}
}

function ccd() {
    mkdir -p $1 && cd $1
}

function cfp() {
    FILEPATH="$(pwd)/$1"
    echo "Copied path $FILEPATH"
    echo -n "$FILEPATH" | pbcopy
}

aswap() {
    read profile <<< $@
    if [ -z $profile ]; then
        profile='default'
    fi
    export AWS_PROFILE=$profile
}

function getip() {
    SEARCH_TERM=$1
    FILTER='[.Reservations[].Instances[]] | map(select(. != null and .Tags != null and (.Tags | from_entries | has("Name")) and has("PrivateIpAddress"))) | [(map(.Tags | from_entries | .Name)), map(.PrivateIpAddress)] | transpose | map({(.[0]): .[1]}) | add'
    if [ ! -z "$SEARCH_TERM" ]; then
        FILTER="$FILTER | with_entries(select(.key | test(\"$SEARCH_TERM\")))"
    fi
    RESULTS=$(aws ec2 describe-instances | jq -S "$FILTER")
    echo "$RESULTS" | jq '.'
    NUM_RESULTS=$(echo "$RESULTS" | jq 'length')
    if [[ $NUM_RESULTS -eq 1 ]]; then
        IP=$(echo "$RESULTS" | jq 'to_entries | .[0].value' | cut -d'"' -f2)
        echo "Copying IP=$IP to clipboard"
        echo -n "$IP" | pbcopy
    fi
}

function dm() {
    DEFAULT_TAG='3.8.2-jdk-8-slim'
    MVN_IMG_TAG="${MVN_VERSION:-$DEFAULT_TAG}"
    echo "version: $MVN_IMG_TAG"
    CONTAINER_NAME="maven-builder_$(git remote get-url origin | cut -d'/' -f2 | cut -d'.' -f1)_$(date +%s)"

    docker run -it --rm --name "$CONTAINER_NAME" \
        -v "$PWD":/usr/src/app \
        -v "$HOME"/.m2:/root/.m2 \
        -w /usr/src/app \
        "maven:$MVN_IMG_TAG" \
        mvn $@
}

function nb() {
    NEW_BRANCH=$1
    git checkout -b "$NEW_BRANCH" && git push --set-upstream origin "$NEW_BRANCH"
}

# https://stackoverflow.com/a/59412853
function seecert () {
  nslookup $1
  (openssl s_client -showcerts -servername $1 -connect $1:443 <<< "Q" | openssl x509 -text | grep -iA2 "Validity")
}


# - - - - - - - - - - - - -
# - - - bootstrapping - - -
# - - - - - - - - - - - - -
# disable shared history between tabs
unsetopt inc_append_history
unsetopt share_history

# - powerlevel10k -
# source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# - jenv -
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

export PATH="$PATH:$(yarn global bin)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# - direnv -
eval "$(direnv hook zsh)"

# - krew -
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

